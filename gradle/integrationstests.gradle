sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output + sourceSets.test.output
        runtimeClasspath += sourceSets.main.output + sourceSets.test.output
    }
}

configurations {
    integrationTestImplementation.extendsFrom implementation
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    integrationTestImplementation configurations.testImplementation,
        "junit:junit:4.13",
        "org.hamcrest:hamcrest-library:2.2",
        "org.assertj:assertj-core:3.15.0"
}

task integrationTest(type: Test) {
    group = 'verification'
    description = 'Runs the integration tests.'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter test
}

tasks.withType(Test) {
    testLogging.exceptionFormat = 'full'
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

eclipse {
    classpath {
        plusConfigurations += [ configurations.integrationTestCompileClasspath ]
    }
}

check.dependsOn integrationTest
integrationTest.dependsOn assemble